// ============================================================================
// Poster
// ============================================================================

////
/// 
/// Accordion Components Mixins Module
/// ===========================================================================
/// 
/// @group Components
/// @author Scape Agency
/// @link https://scape.style
/// @since 0.1.0 initial release
/// @todo None
/// @see https://www.w3schools.com/howto/howto_js_accordion.asp
/// @access public
/// 
////


// ============================================================================
// Use
// ============================================================================


// ============================================================================
// Components | Table
// ============================================================================


@use "../dev" as *;
@use "../variables" as *;
@use "../mixins" as *;
@use "../layout" as *;
@use "../elements" as *;
@use "../type" as *;
// @use "../animation" as *;

/// Styling for the `table` element to ensure consistency across browsers.
/// Tables are styled with full width, border-collapse, and no spacing between cells.
/// @group Table
table {
    border-color: inherit; /* Correct border color in all Chrome, Edge, and Safari. */
    text-indent: 0; /* Remove text indentation in Chrome, Edge, and Safari */
    width: 100%; /* Ensure table takes up full width of its container */
    max-width: 100%;
    margin: 0;
    border-collapse: collapse;
    border-spacing: 0;
}




/// Styling for table cells and headers, ensuring consistent padding and borders.
/// Borders are styled using a variable for color, and padding is applied uniformly.
/// @group Table
table td,
table th {
    padding: .625rem 1rem;
    border: 1px solid;
    border-color: var(--ptf-color-14) !important;
}

/// Styling for table headers to ensure bold text and specific color.
/// This applies to both table row headers and table section headers.
/// @group Table
table tr th,
table thead th {
    font-weight: 700;
    color: var(--ptf-color-black);
}


/// Custom table styling for a more specific table design.
/// This includes settings for line height, border styles, and additional classes for rows, headers, bodies, and buttons.
/// @group Table
.table {
    line-height: $q * 1.5;
    border-top-width: ($q * 0.25);
    border-top-style: solid;
    border-top-color: $color_02;

    /// Table row styling within the custom table.
    /// Includes flexible width, padding, and border settings.
    /// @group Table
    .table_row {
        height: auto;
        width: 100%;
        overflow: hidden;
        clear: both;
        padding-top: ($q * 1.00);
        padding-bottom: ($q * 0.75);
        border-bottom-width: ($q * 0.25);
        border-bottom-style: solid;
        border-bottom-color: $color_02;
        display: flex;
        flex-direction: row;

        /// Table header styling within the custom table row.
        /// Ensures consistent height and margin for headers.
        /// @group Table
        .table_head {
            @include reset_bleed;
            height: $baseline_04;
            min-width: calc(25% + #{$q});
            flex-basis: calc(25% + #{$q});
            margin-top: $q;
            text-transform: uppercase;
        }

        /// Table body styling for expandable content within the row.
        /// Allows for transition effects and height adjustments.
        /// @group Table
        .table_body {
            // @include transition_duration_01;
            @include reset_bleed;
            flex-basis: calc(75% - #{$q} * 12);
            padding-top: $q;
            padding-bottom: $q;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            height: 100%;
            max-height: $baseline_04;

            &.active {
                // @include transition_duration_01;
                max-height: 240px;
            }

            .table_body_item {
                @include reset_bleed;
                max-height: $q * 6;
            }
        }

        /// Table button styling for interactive elements within the table row.
        /// Includes settings for icons and rotation effects.
        /// @group Table
        .table_button {
            @include reset_bleed;
            margin-left: auto;
            flex-basis: $q * 6;
            height: $q * 6;

            .icon svg {
                // @include transition_duration_01;
            }

            &.active .icon svg {
                transform: rotate(180deg);
            }
        }
    }
}

// //
// // Basic Bootstrap table
// //

// .table {
//     --#{$prefix}table-color: #{$table-color};
//     --#{$prefix}table-bg: #{$table-bg};
//     --#{$prefix}table-border-color: #{$table-border-color};
//     --#{$prefix}table-accent-bg: #{$table-accent-bg};
//     --#{$prefix}table-striped-color: #{$table-striped-color};
//     --#{$prefix}table-striped-bg: #{$table-striped-bg};
//     --#{$prefix}table-active-color: #{$table-active-color};
//     --#{$prefix}table-active-bg: #{$table-active-bg};
//     --#{$prefix}table-hover-color: #{$table-hover-color};
//     --#{$prefix}table-hover-bg: #{$table-hover-bg};
  
//     width: 100%;
//     margin-bottom: $spacer;
//     color: var(--#{$prefix}table-color);
//     vertical-align: $table-cell-vertical-align;
//     border-color: var(--#{$prefix}table-border-color);
  
//     // Target th & td
//     // We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.
//     // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).
//     // Another advantage is that this generates less code and makes the selector less specific making it easier to override.
//     // stylelint-disable-next-line selector-max-universal
//     > :not(caption) > * > * {
//       padding: $table-cell-padding-y $table-cell-padding-x;
//       background-color: var(--#{$prefix}table-bg);
//       border-bottom-width: $table-border-width;
//       box-shadow: inset 0 0 0 9999px var(--#{$prefix}table-accent-bg);
//     }
  
//     > tbody {
//       vertical-align: inherit;
//     }
  
//     > thead {
//       vertical-align: bottom;
//     }
//   }
  
//   .table-group-divider {
//     border-top: calc($table-border-width * 2) solid $table-group-separator-color; // stylelint-disable-line function-disallowed-list
//   }
  
//   //
//   // Change placement of captions with a class
//   //
  
//   .caption-top {
//     caption-side: top;
//   }
  
  
//   //
//   // Condensed table w/ half padding
//   //
  
//   .table-sm {
//     // stylelint-disable-next-line selector-max-universal
//     > :not(caption) > * > * {
//       padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;
//     }
//   }
  
  
//   // Border versions
//   //
//   // Add or remove borders all around the table and between all the columns.
//   //
//   // When borders are added on all sides of the cells, the corners can render odd when
//   // these borders do not have the same color or if they are semi-transparent.
//   // Therefor we add top and border bottoms to the `tr`s and left and right borders
//   // to the `td`s or `th`s
  
//   .table-bordered {
//     > :not(caption) > * {
//       border-width: $table-border-width 0;
  
//       // stylelint-disable-next-line selector-max-universal
//       > * {
//         border-width: 0 $table-border-width;
//       }
//     }
//   }
  
//   .table-borderless {
//     // stylelint-disable-next-line selector-max-universal
//     > :not(caption) > * > * {
//       border-bottom-width: 0;
//     }
  
//     > :not(:first-child) {
//       border-top-width: 0;
//     }
//   }
  
//   // Zebra-striping
//   //
//   // Default zebra-stripe styles (alternating gray and transparent backgrounds)
  
//   // For rows
//   .table-striped {
//     > tbody > tr:nth-of-type(#{$table-striped-order}) > * {
//       --#{$prefix}table-accent-bg: var(--#{$prefix}table-striped-bg);
//       color: var(--#{$prefix}table-striped-color);
//     }
//   }
  
//   // For columns
//   .table-striped-columns {
//     > :not(caption) > tr > :nth-child(#{$table-striped-columns-order}) {
//       --#{$prefix}table-accent-bg: var(--#{$prefix}table-striped-bg);
//       color: var(--#{$prefix}table-striped-color);
//     }
//   }
  
//   // Active table
//   //
//   // The `.table-active` class can be added to highlight rows or cells
  
//   .table-active {
//     --#{$prefix}table-accent-bg: var(--#{$prefix}table-active-bg);
//     color: var(--#{$prefix}table-active-color);
//   }
  
//   // Hover effect
//   //
//   // Placed here since it has to come after the potential zebra striping
  
//   .table-hover {
//     > tbody > tr:hover > * {
//       --#{$prefix}table-accent-bg: var(--#{$prefix}table-hover-bg);
//       color: var(--#{$prefix}table-hover-color);
//     }
//   }
  
  
//   // Table variants
//   //
//   // Table variants set the table cell backgrounds, border colors
//   // and the colors of the striped, hovered & active tables
  
//   @each $color, $value in $table-variants {
//     @include table-variant($color, $value);
//   }
  
//   // Responsive tables
//   //
//   // Generate series of `.table-responsive-*` classes for configuring the screen
//   // size of where your table will overflow.
  
//   @each $breakpoint in map-keys($grid-breakpoints) {
//     $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  
//     @include media-breakpoint-down($breakpoint) {
//       .table-responsive#{$infix} {
//         overflow-x: auto;
//         -webkit-overflow-scrolling: touch;
//       }
//     }
//   }